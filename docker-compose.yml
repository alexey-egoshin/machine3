version: '3.7'

services:
  ubuntu:
    privileged: true
    build:
      context: ./ubuntu
      dockerfile: Dockerfile
    #image: kuzovkov/machine3-ubuntu:latest
    volumes:
      - ./ubuntu/app:/usr/src/app
      - ./ubuntu/data:/data
      - /dev/shm:/dev/shm
    dns: 8.8.8.8
    ports:
      - "5900:5900"
      - "6001:6001"
    user: apps

  db:
    image: postgres:10.6
    environment:
      POSTGRES_PASSWORD: Admin123456
      POSTGRES_USER: postgres
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./db/dumps:/dumps
      - ./db/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./db/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./db/pg_ident.conf:/etc/postgresql/pg_ident.conf
      - db-data:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: MyStrong@Passw0rd
    ports:
      - "1433:1433"

  mysql:
     image: mysql:5.7
     volumes:
       - mysql-data:/var/lib/mysql
       - ./mysql/dump:/dump
       - ./mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf:ro
     ports:
      - "13306:3306"
     environment:
       MYSQL_ROOT_PASSWORD: rootp@ssw0rd
       MYSQL_DATABASE: courses
       MYSQL_USER: parser
       MYSQL_PASSWORD: Admin123456

  node:
    build:
      context: ./node
      dockerfile: Dockerfile
    volumes:
      - ./node/app:/usr/src/env/app
      - ./node/data:/data
    dns: 8.8.8.8
    ports:
      - "80:80"
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_USER: parser
      DB_NAME: courses
      DB_PASS: Admin123456

volumes:
  db-data: {}
  mysql-data: {}